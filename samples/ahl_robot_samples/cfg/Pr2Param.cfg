#!/usr/bin/env python
PACKAGE = "ahl_robot_samples"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
group = gen.add_group("pr2_param");

group.add("show_target", bool_t, 0, "Show reference position", True)
group.add("sin_x_l", bool_t, 0, "desired x sin wave", False)
group.add("sin_y_l", bool_t, 0, "desired y sin wave", False)
group.add("sin_z_l", bool_t, 0, "desired z sin wave", False)
group.add("sin_x_r", bool_t, 0, "desired x sin wave", False)
group.add("sin_y_r", bool_t, 0, "desired y sin wave", False)
group.add("sin_z_r", bool_t, 0, "desired z sin wave", False)

group.add("x_l", double_t, 0, "desired x for left hand", 0.6, -3.0, 3.0)
group.add("y_l", double_t, 0, "desired y for left hand", 0.3, -3.0, 3.0)
group.add("z_l", double_t, 0, "desired z for left hand", 0.6,  0.0, 3.0)

group.add("roll_l",  double_t, 0, "desired roll  for left hand", 0.0, -3.14, 3.14)
group.add("pitch_l", double_t, 0, "desired pitch for left hand", 0.0, -3.14, 3.14)
group.add("yaw_l",   double_t, 0, "desired yaw   for left hand", 0.0, -3.14, 3.14)

group.add("x_r", double_t, 0, "desired x for right hand",  0.6, -3.0, 3.0)
group.add("y_r", double_t, 0, "desired y for right hand", -0.3, -3.0, 3.0)
group.add("z_r", double_t, 0, "desired z for right hand",  0.6,  0.0, 3.0)

group.add("roll_r",  double_t, 0, "desired roll  for right hand", 0.0, -3.14, 3.14)
group.add("pitch_r", double_t, 0, "desired pitch for right hand", 0.0, -3.14, 3.14)
group.add("yaw_r",   double_t, 0, "desired yaw   for right hand", 0.0, -3.14, 3.14)

group.add("Rf_roll_l",  double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rf_pitch_l", double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rf_yaw_l",   double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)

group.add("Rm_roll_l",  double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rm_pitch_l", double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rm_yaw_l",   double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)

group.add("fx_l",  double_t, 0, "desired force for left hand", 0.0, -20, 20)
group.add("fy_l",  double_t, 0, "desired force for left hand", 0.0, -20, 20)
group.add("fz_l",  double_t, 0, "desired force for left hand", 0.0, -20, 20)

group.add("mx_l", double_t, 0, "desired moment for left hand", 0.0, -10, 10)
group.add("my_l", double_t, 0, "desired moment for left hand", 0.0, -10, 10)
group.add("mz_l", double_t, 0, "desired moment for left hand", 0.0, -10, 10)

group.add("Rf_roll_r",  double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rf_pitch_r", double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rf_yaw_r",   double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)

group.add("Rm_roll_r",  double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rm_pitch_r", double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)
group.add("Rm_yaw_r",   double_t, 0, "roll angle of force control", 0.0, -3.14, 3.14)

group.add("fx_r",  double_t, 0, "desired force for right hand", 0.0, -20, 20)
group.add("fy_r",  double_t, 0, "desired force for right hand", 0.0, -20, 20)
group.add("fz_r",  double_t, 0, "desired force for right hand", 0.0, -20, 20)

group.add("mx_r", double_t, 0, "desired moment for right hand", 0.0, -10, 10)
group.add("my_r", double_t, 0, "desired moment for right hand", 0.0, -10, 10)
group.add("mz_r", double_t, 0, "desired moment for right hand", 0.0, -10, 10)

group.add("q_base1", double_t, 0, "displacement of base along x axis", 0.0, -3.0, 3.0)
group.add("q_base2", double_t, 0, "displacement of base along y axis", 0.0, -3.0, 3.0)
group.add("q_base3", double_t, 0, "orientation of base",           0.0, -3.1, 3.1)
group.add("q_base4", double_t, 0, "displacement of torso",        0.15,  0.0, 0.3)
group.add("q_l1",    double_t, 0, "angle of left shoulder pan",   0.75, -0.7, 2.2)
group.add("q_l2",    double_t, 0, "angle of left shoulder lift",   0.4, -0.5, 1.3)
group.add("q_l3",    double_t, 0, "angle of left upper arm",      1.55, -0.8, 3.9)
group.add("q_l4",    double_t, 0, "angle of left elbow",         -1.15, -2.3, 0.0)
group.add("q_l5",    double_t, 0, "angle of left forearm",         0.0, -3.1, 3.1)
group.add("q_l6",    double_t, 0, "angle of left wrist flex",    -1.05, -2.1, 0.0)
group.add("q_l7",    double_t, 0, "angle of left wrist roll",      0.0, -3.1, 3.1)
group.add("q_r1",    double_t, 0, "angle of right shoulder pan", -0.75, -2.2, 0.7)
group.add("q_r2",    double_t, 0, "angle of right shoulder lift",  0.4, -0.5, 1.3)
group.add("q_r3",    double_t, 0, "angle of right upper arm",    -1.55, -3.9, 0.8)
group.add("q_r4",    double_t, 0, "angle of right elbow",        -1.15, -2.3, 0.0)
group.add("q_r5",    double_t, 0, "angle of right forearm",        0.0, -3.1, 3.1)
group.add("q_r6",    double_t, 0, "angle of right wrist flex",   -1.05, -2.1, 0.0)
group.add("q_r7",    double_t, 0, "angle of right wrist roll",     0.0, -3.1, 3.1)

exit(gen.generate(PACKAGE, "ahl_robot_samples", "Pr2Param"))
